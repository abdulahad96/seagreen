// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Header renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": undefined,
        "flexDirection": "row",
        "height": 126.73,
      },
      Object {
        "elevation": 5,
        "shadowColor": undefined,
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.25,
        "shadowRadius": 3.84,
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-left-btn"
  >
    <Image />
  </View>
  <Text
    style={
      Array [
        Object {
          "alignSelf": "center",
          "color": "#ffffff",
          "fontFamily": "Roboto-Bold",
          "fontSize": 36,
          "textAlign": "center",
          "width": 550,
        },
        undefined,
      ]
    }
  >
    
  </Text>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-right-btn"
  >
    <Image
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Component Header renders correctly with leftIcon and rightIcon and Header Text 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": undefined,
        "flexDirection": "row",
        "height": 126.73,
      },
      Object {
        "elevation": 5,
        "shadowColor": undefined,
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.25,
        "shadowRadius": 3.84,
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-left-btn"
  >
    <Image
      source=""
    />
  </View>
  <Text
    style={
      Array [
        Object {
          "alignSelf": "center",
          "color": "#ffffff",
          "fontFamily": "Roboto-Bold",
          "fontSize": 36,
          "textAlign": "center",
          "width": 550,
        },
        undefined,
      ]
    }
  >
    
  </Text>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-right-btn"
  >
    <Image
      source=""
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Component Header renders correctly with notification 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": undefined,
        "flexDirection": "row",
        "height": 126.73,
      },
      Object {
        "elevation": 5,
        "shadowColor": undefined,
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.25,
        "shadowRadius": 3.84,
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-left-btn"
  >
    <Image
      source=""
    />
  </View>
  <Text
    style={
      Array [
        Object {
          "alignSelf": "center",
          "color": "#ffffff",
          "fontFamily": "Roboto-Bold",
          "fontSize": 36,
          "textAlign": "center",
          "width": 550,
        },
        undefined,
      ]
    }
  >
    
  </Text>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-right-btn"
  >
    <Image
      source=""
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#6f6a41",
          "borderRadius": 100,
          "paddingHorizontal": 10,
          "paddingVertical": 4,
          "position": "absolute",
          "right": 20,
          "top": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 16,
          }
        }
      >
        1
      </Text>
    </View>
  </View>
</View>
`;

exports[`Component Header renders correctly with notification 2`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": undefined,
        "flexDirection": "row",
        "height": 126.73,
      },
      Object {
        "elevation": 5,
        "shadowColor": undefined,
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.25,
        "shadowRadius": 3.84,
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-left-btn"
  >
    <Image
      source=""
    />
  </View>
  <Text
    style={
      Array [
        Object {
          "alignSelf": "center",
          "color": "#ffffff",
          "fontFamily": "Roboto-Bold",
          "fontSize": 36,
          "textAlign": "center",
          "width": 550,
        },
        undefined,
      ]
    }
  >
    
  </Text>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "opacity": 1,
        "width": 100,
      }
    }
    testID="header-right-btn"
  >
    <Image
      source=""
      style={
        Array [
          undefined,
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#6f6a41",
          "borderRadius": 100,
          "paddingHorizontal": 10,
          "paddingVertical": 4,
          "position": "absolute",
          "right": 20,
          "top": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 16,
          }
        }
      >
        1
      </Text>
    </View>
  </View>
</View>
`;
